6.1 Express-geneator 설치

프레임워크에 필요한 package.json  를  만들어주고 기본 폴더 구조까지 잡아주는 패키지
npm 전역 설치가 필요하다.

6.3 미들 웨어
미들웨어는 익스프레스의 해심이다.
요청과 응답의 중간에 위치하여 미들웨어 라고 부른다.
라우터, 에러핸들로 또한 미들웨어의 일종이다.

미들웨어는 주로 app.use 와 함께 사용된다.

요청 => logger => logger(morgan) => son, urlencoded => cookieParser => 라우터
=> 404 처리 미들웨어 => 에러 핸들러 => 응답

morgan : 요청에 대한 정보를 콘솔에 기록해준다.
함수 인자로 dev 대신 short, common, combined 등 줄 수 있다.
인자에 따라 콘솔에 나오는 로그가 다르다.
보통 개발시에는 short 또는 dev 를 쓰며
배포시에는 common 이나 combined 를 많이 사용한다.
데이터베이스 로그를 남길때도 사용할 수 있지만 보통 이럴때는 winston 모듈을 더 많이 사용

body-parser
요청의 본문을 해석해주는 미들웨어
보통 폼 데이터나 AJAX 요청의 데이터를 처리
익스프레스 4.16.0 버전부터 body-parser 를 express 에 내장기능으로 사용
따라서 express.json() 또는 express.urlencoded()등을 사용함
app.use(bodyParser.raw()) : 본문이 버퍼 데이터 일때 해석하는 미들웨어
app.use(bodyParser.text()) : 본문이 텍스트 데이터일 경우 해석하는 미들웨어
대신 multipart/form-data 와 같은 폼을 통해 전송된 데이터는 해석하지 못함

cookie-parser
요청에 동봉된 쿠키를 해석

static
정적파일 제공
express.static(path.join(__dirname,'public')); 와 같이 정적파일이 들어가있는 경로를 지정해준다.
하지만 url에는 public 이 포함되지 않는다.
이러한점은 서버의 폴더 경로와 요청 경로가 다르기 때문에 외부인이 쉽게 구조를 파악할수 없어 보안이 도움이 된다.
위치에 대한 고민??

express-session : 세션 관리용 미들웨어, 로그인 등의 이유로 세션을 구현할 때 유용 (기본설치x)
connect-flash : 일회성 메세지들을 웹 브라우저에 나타낼 때 좋음


6.4 Router 객체로 라우터 분리

app.use('/',indexRouter);
app.use('/users',usersRouter);

use 대신 get, post, put, petch, delete 사용가능

app.get('/', function(req,res,next){
    console.log('GET 메소드 / 주소의 요청일때만 실행');
    next();
})
app.post('/data', function(req,res,next){
    console.log('POST 메소드 /data 주소의 요청일때만 실행');
    next();
});

use 메서드는 모든 HTTP 메소드에 대해 요청 주소만 일치하면 실행되지만
get,post,put,petch,delete 와 같은 메서드는 주소뿐만아닌 메서드까지 일치할때 실행된다.

Router 객체 쓰지 않고 app.get() 과 같은 방식으로 라우터를 지정할 수 있지만
코드 관리를 위해 라우터를 별도로 분리한다.

라우터에서는 요청에대한 응답을 보내거나 에러 핸들러 요청을 넘겨야 한다.
아니면 브라우저는 계속 응답을 받기 위해 대기한다.

라우터 콜백함수에서 next('route') 는 연결된 나머지 미들웨어를 건너뛰고 싶을때 사용한다.

*라우터 주소 패턴
주소에 :id 는 바인딩 변수와 비슷하다 문자열 id 가 아닌 해당 위치에 다른 값이 들어와도
해당 라우터가 걸린다.
해당 라우터는 다른 라우터보다 뒤에 위치해야 한다.


